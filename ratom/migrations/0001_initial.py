# Generated by Django 2.2.7 on 2020-01-17 17:53

from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
import django.contrib.postgres.fields
import django.contrib.postgres.fields.jsonb
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import ratom.models
import simple_history.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0011_update_proxy_permissions'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=30, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('user_type', models.CharField(choices=[(ratom.models.UserTEnum('Archivist'), 'Archivist'), (ratom.models.UserTEnum('Researcher'), 'Researcher')], max_length=32)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Account',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200)),
            ],
        ),
        migrations.CreateModel(
            name='File',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('filename', models.CharField(max_length=200)),
                ('original_path', models.CharField(max_length=500)),
                ('reported_total_messages', models.IntegerField(null=True)),
                ('accession_date', models.DateField(null=True)),
                ('file_size', models.IntegerField(null=True)),
                ('md5_hash', models.CharField(max_length=32)),
                ('import_status', models.CharField(choices=[(ratom.models.FileImportStatus('Created'), 'Created'), (ratom.models.FileImportStatus('Importing'), 'Importing'), (ratom.models.FileImportStatus('Complete'), 'Complete'), (ratom.models.FileImportStatus('Failed'), 'Failed')], default=ratom.models.FileImportStatus('Created'), max_length=32)),
                ('date_imported', models.DateTimeField(auto_now_add=True)),
                ('account', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='ratom.Account')),
            ],
            options={
                'unique_together': {('account', 'filename')},
            },
        ),
        migrations.CreateModel(
            name='Redaction',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('redacted_subject', models.TextField(blank=True)),
                ('redacted_body', models.TextField(blank=True)),
            ],
        ),
        migrations.CreateModel(
            name='RestrictionAuthority',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('authorities', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(blank=True, max_length=128), size=None)),
            ],
        ),
        migrations.CreateModel(
            name='Processor',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('processed', models.BooleanField(default=False)),
                ('is_record', models.BooleanField(default=True)),
                ('has_pii', models.BooleanField(default=False)),
                ('date_processed', models.DateTimeField(null=True)),
                ('date_modified', models.DateTimeField(null=True)),
                ('last_modified_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Message',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('source_id', models.CharField(max_length=256)),
                ('sent_date', models.DateTimeField(null=True)),
                ('msg_from', models.TextField(blank=True)),
                ('msg_to', models.TextField(blank=True)),
                ('msg_cc', models.TextField(blank=True)),
                ('msg_bcc', models.TextField(blank=True)),
                ('msg_subject', models.TextField(blank=True)),
                ('msg_body', models.TextField(blank=True)),
                ('directory', models.TextField(blank=True)),
                ('data', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('account', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='ratom.Account')),
                ('file', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='ratom.File')),
                ('redaction', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='ratom.Redaction')),
                ('restrictions', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='ratom.RestrictionAuthority')),
            ],
        ),
        migrations.CreateModel(
            name='HistoricalMessage',
            fields=[
                ('id', models.IntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('source_id', models.CharField(max_length=256)),
                ('sent_date', models.DateTimeField(null=True)),
                ('msg_from', models.TextField(blank=True)),
                ('msg_to', models.TextField(blank=True)),
                ('msg_cc', models.TextField(blank=True)),
                ('msg_bcc', models.TextField(blank=True)),
                ('msg_subject', models.TextField(blank=True)),
                ('msg_body', models.TextField(blank=True)),
                ('directory', models.TextField(blank=True)),
                ('data', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField()),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('account', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='ratom.Account')),
                ('file', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='ratom.File')),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('redaction', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='ratom.Redaction')),
                ('restrictions', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='ratom.RestrictionAuthority')),
            ],
            options={
                'verbose_name': 'historical message',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': 'history_date',
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalFile',
            fields=[
                ('id', models.IntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('filename', models.CharField(max_length=200)),
                ('original_path', models.CharField(max_length=500)),
                ('reported_total_messages', models.IntegerField(null=True)),
                ('accession_date', models.DateField(null=True)),
                ('file_size', models.IntegerField(null=True)),
                ('md5_hash', models.CharField(max_length=32)),
                ('import_status', models.CharField(choices=[(ratom.models.FileImportStatus('Created'), 'Created'), (ratom.models.FileImportStatus('Importing'), 'Importing'), (ratom.models.FileImportStatus('Complete'), 'Complete'), (ratom.models.FileImportStatus('Failed'), 'Failed')], default=ratom.models.FileImportStatus('Created'), max_length=32)),
                ('date_imported', models.DateTimeField(blank=True, editable=False)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField()),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('account', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='ratom.Account')),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'historical file',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': 'history_date',
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalAccount',
            fields=[
                ('id', models.IntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('title', models.CharField(max_length=200)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField()),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'historical account',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': 'history_date',
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='Attachments',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('file_name', models.CharField(blank=True, max_length=256)),
                ('hashed_name', models.CharField(max_length=32)),
                ('mime_type', models.CharField(max_length=64)),
                ('upload', models.FileField(upload_to=ratom.models.upload_directory_path)),
                ('message', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='ratom.Message')),
            ],
        ),
    ]
